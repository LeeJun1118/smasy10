spring:
  datasource:
    url: jdbc:mysql://localhost:3306/smasy?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 687834574119-vje5ibmq43b3imo264i20pclit14914f.apps.googleusercontent.com
            clientSecret: sAlaWBH55f8qBV9GnW7oMkPt
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
    user:
      name: testId
      password: test1234
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC11111111ABC926D96C90030DD58429D2751AC1BDBBC11111111ABC926D96C90030DD58429D2751AC1BDBBC11111111ABC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect